{"ast":null,"code":"var _jsxFileName = \"/Users/Mark/rs-tech-v2/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nvar root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}))); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals(); // /**\n//  * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n//  * https://reactnavigation.org/docs/getting-started\n//  *\n//  */\n//  import * as React from 'react';\n//  import AsyncStorage from '@react-native-async-storage/async-storage';\n//  import { NavigationContainer, useNavigation } from '@react-navigation/native';\n//  import { createNativeStackNavigator } from '@react-navigation/native-stack';\n//  import * as Linking from 'expo-linking';\n//  import { Alert } from 'react-native';\n//  import AuthLoadingScreen from '../screens/AuthLoadingScreen';\n//  import ListScreen from '../screens/ListScreen';\n//  import LoginScreen from '../screens/LoginScreen';\n//  import MapScreen from '../screens/MapScreen';\n//  import ModalScreen from '../screens/ModalScreen';\n//  import NotFoundScreen from '../screens/NotFoundScreen';\n//  import TreeDetailsScreen from '../screens/TreeDetailsScreen';\n//  import VerificationScreen from '../screens/VerificationScreen';\n//  import LinkingConfiguration from './LinkingConfiguration';\n//  import TabNavigator from './TabNavigator';\n//  /**\n//   * A root stack navigator is often used for displaying modals on top of all other content.\n//   * https://reactnavigation.org/docs/modal\n//   */\n//  function RootNavigator() {\n//    const Stack = createNativeStackNavigator();\n//    const { Navigator, Screen, Group } = Stack;\n//    const navigation = useNavigation();\n//    const handleDeepLinkingUrl = async event => {\n//      const { queryParams } = Linking.parse(event.url);\n//      const userToken = await AsyncStorage.getItem('userToken');\n//      if (userToken) {\n//        navigation.navigate('TreeDetails', { uuid: queryParams.uuid });\n//      } else {\n//        // TODO: remove this auth check once 'Guest Mode's is supported\n//        Alert.alert(\n//          'Authentication Requrired',\n//          'Log in/create an account to see this page.',\n//        );\n//      }\n//    };\n//    Linking.addEventListener('url', handleDeepLinkingUrl);\n//    return (\n//      <Navigator initialRouteName=\"AuthLoading\">\n//        <Screen\n//          name=\"AuthLoading\"\n//          component={AuthLoadingScreen}\n//          options={{\n//            headerShown: false,\n//            gestureEnabled: false,\n//          }}\n//        />\n//        <Screen\n//          name=\"Map\"\n//          component={MapScreen}\n//          options={{\n//            title: 'Map View',\n//          }}\n//        />\n//        <Screen\n//          name=\"List\"\n//          component={ListScreen}\n//          options={{\n//            title: 'List View',\n//          }}\n//        />\n//        <Screen\n//          name=\"Login\"\n//          options={{ headerShown: false, gestureEnabled: false }}\n//          component={LoginScreen}\n//        />\n//        <Screen name=\"Verify\" component={VerificationScreen} />\n//        <Screen\n//          name=\"Root\"\n//          component={TabNavigator}\n//          options={{ headerShown: false, gestureEnabled: false }}\n//        />\n//        <Screen\n//          name=\"TreeDetails\"\n//          component={TreeDetailsScreen}\n//          options={{\n//            title: 'View Tree',\n//          }}\n//        />\n//        <Screen\n//          name=\"NotFound\"\n//          component={NotFoundScreen}\n//          options={{ title: 'Oops!' }}\n//        />\n//        <Group screenOptions={{ presentation: 'modal' }}>\n//          <Screen name=\"Modal\" component={ModalScreen} />\n//        </Group>\n//      </Navigator>\n//    );\n//  }\n//  export default function Navigation() {\n//    return (\n//      <NavigationContainer linking={LinkingConfiguration}>\n//        <RootNavigator />\n//      </NavigationContainer>\n//    );\n//  }*","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","root","createRoot","document","getElementById","render"],"sources":["/Users/Mark/rs-tech-v2/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n\n\n// /**\n//  * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n//  * https://reactnavigation.org/docs/getting-started\n//  *\n//  */\n//  import * as React from 'react';\n\n//  import AsyncStorage from '@react-native-async-storage/async-storage';\n//  import { NavigationContainer, useNavigation } from '@react-navigation/native';\n//  import { createNativeStackNavigator } from '@react-navigation/native-stack';\n//  import * as Linking from 'expo-linking';\n//  import { Alert } from 'react-native';\n \n//  import AuthLoadingScreen from '../screens/AuthLoadingScreen';\n//  import ListScreen from '../screens/ListScreen';\n//  import LoginScreen from '../screens/LoginScreen';\n//  import MapScreen from '../screens/MapScreen';\n//  import ModalScreen from '../screens/ModalScreen';\n//  import NotFoundScreen from '../screens/NotFoundScreen';\n//  import TreeDetailsScreen from '../screens/TreeDetailsScreen';\n//  import VerificationScreen from '../screens/VerificationScreen';\n//  import LinkingConfiguration from './LinkingConfiguration';\n//  import TabNavigator from './TabNavigator';\n \n//  /**\n//   * A root stack navigator is often used for displaying modals on top of all other content.\n//   * https://reactnavigation.org/docs/modal\n//   */\n//  function RootNavigator() {\n//    const Stack = createNativeStackNavigator();\n//    const { Navigator, Screen, Group } = Stack;\n//    const navigation = useNavigation();\n \n//    const handleDeepLinkingUrl = async event => {\n//      const { queryParams } = Linking.parse(event.url);\n//      const userToken = await AsyncStorage.getItem('userToken');\n//      if (userToken) {\n//        navigation.navigate('TreeDetails', { uuid: queryParams.uuid });\n//      } else {\n//        // TODO: remove this auth check once 'Guest Mode's is supported\n//        Alert.alert(\n//          'Authentication Requrired',\n//          'Log in/create an account to see this page.',\n//        );\n//      }\n//    };\n//    Linking.addEventListener('url', handleDeepLinkingUrl);\n \n//    return (\n//      <Navigator initialRouteName=\"AuthLoading\">\n//        <Screen\n//          name=\"AuthLoading\"\n//          component={AuthLoadingScreen}\n//          options={{\n//            headerShown: false,\n//            gestureEnabled: false,\n//          }}\n//        />\n//        <Screen\n//          name=\"Map\"\n//          component={MapScreen}\n//          options={{\n//            title: 'Map View',\n//          }}\n//        />\n//        <Screen\n//          name=\"List\"\n//          component={ListScreen}\n//          options={{\n//            title: 'List View',\n//          }}\n//        />\n//        <Screen\n//          name=\"Login\"\n//          options={{ headerShown: false, gestureEnabled: false }}\n//          component={LoginScreen}\n//        />\n//        <Screen name=\"Verify\" component={VerificationScreen} />\n//        <Screen\n//          name=\"Root\"\n//          component={TabNavigator}\n//          options={{ headerShown: false, gestureEnabled: false }}\n//        />\n//        <Screen\n//          name=\"TreeDetails\"\n//          component={TreeDetailsScreen}\n//          options={{\n//            title: 'View Tree',\n//          }}\n//        />\n//        <Screen\n//          name=\"NotFound\"\n//          component={NotFoundScreen}\n//          options={{ title: 'Oops!' }}\n//        />\n//        <Group screenOptions={{ presentation: 'modal' }}>\n//          <Screen name=\"Modal\" component={ModalScreen} />\n//        </Group>\n//      </Navigator>\n//    );\n//  }\n \n//  export default function Navigation() {\n//    return (\n//      <NavigationContainer linking={LinkingConfiguration}>\n//        <RootNavigator />\n//      </NavigationContainer>\n//    );\n//  }*"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,IAAMC,IAAI,GAAGH,QAAQ,CAACI,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eACE,oBAAC,KAAD,CAAO,UAAP;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACE,oBAAC,GAAD;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EADF,CADF,E,CAMA;AACA;AACA;;AACAL,eAAe,G,CAOf},"metadata":{},"sourceType":"module"}